// Generated by CoffeeScript 1.12.7
(function() {
  var Contacts, ContactsShow, ref, ref1,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Contacts = (function(superClass) {
    extend(Contacts, superClass);

    function Contacts() {
      return Contacts.__super__.constructor.apply(this, arguments);
    }

    Contacts.prototype.el = '#contacts-list';

    Contacts.prototype.initialize = function(options) {
      return this.collection.on('reset', this.render, this);
    };

    Contacts.prototype.template = _.template($('#contact-list-item').html());

    Contacts.prototype.render = function() {
      var i, len, model, ref;
      this.$el.html('');
      ref = this.collection.models;
      for (i = 0, len = ref.length; i < len; i++) {
        model = ref[i];
        if (model.attributes.image == null) {
          model.attributes.image = 'tyrion.jpg';
        }
        this.$el.append(this.template(model.toJSON()));
      }
      return this;
    };

    return Contacts;

  })(Backbone.View);

  this.app = (ref = window.app) != null ? ref : {};

  this.app.Views.Contacts = Contacts;

  ContactsShow = (function(superClass) {
    extend(ContactsShow, superClass);

    function ContactsShow() {
      return ContactsShow.__super__.constructor.apply(this, arguments);
    }

    ContactsShow.prototype.el = '#contact-page';

    ContactsShow.prototype.template = _.template($('#contact-item').html());

    ContactsShow.prototype.events = {
      'click .back': 'goBack',
      'click .do-something': 'doSomething'
    };

    ContactsShow.prototype.render = function() {
      this.$el.html('');
      this.$el.append(this.template(this.model.toJSON()));
      return this;
    };

    ContactsShow.prototype.doSomething = function(e) {
      return e.preventDefault();
    };

    ContactsShow.prototype.goBack = function() {
      return app.goBack();
    };

    return ContactsShow;

  })(Backbone.View);

  this.app = (ref1 = window.app) != null ? ref1 : {};

  this.app.Views.ContactsShow = ContactsShow;

}).call(this);
